// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TripsAPI.Repositories;

namespace TripsAPI.Migrations
{
    [DbContext(typeof(TripContext))]
    partial class TripContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TripsAPI.Models.TaxiZone", b =>
                {
                    b.Property<int>("TaxiZoneId")
                        .HasColumnType("int");

                    b.Property<string>("Borough")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaxiZoneId");

                    b.ToTable("TaxiZones");
                });

            modelBuilder.Entity("TripsAPI.Models.TripInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Distance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DistanceRange")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DropOffBorough")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DropOffDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DropOffZone")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DropOffZoneId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("DATEDIFF(minute, [PickupDateTime], [DropOffDateTime])", true);

                    b.Property<string>("DurationRange")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Fare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FareRange")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Hour")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("DATEPART(HOUR,[PickupDateTime])", true);

                    b.Property<int>("Month")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("DATEPART(m,[PickupDateTime])", true);

                    b.Property<string>("Operator")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("PassangerCount")
                        .HasColumnType("int");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<string>("PickUpBorough")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PickUpZone")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PickUpZoneId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PickupDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("DATEPART(YYYY,[PickupDateTime])", true);

                    b.HasKey("Id");

                    b.HasIndex("DistanceRange");

                    b.HasIndex("DropOffBorough");

                    b.HasIndex("DropOffDateTime");

                    b.HasIndex("DropOffZone");

                    b.HasIndex("DurationRange");

                    b.HasIndex("FareRange");

                    b.HasIndex("PickUpBorough");

                    b.HasIndex("PickUpZone");

                    b.HasIndex("PickupDateTime");

                    b.ToTable("TripsInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
